<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2023-06-23T02:06:01" hostname="DESKTOP-IDQKPQV" time="0.503">
  <properties/>
  <testcase name="deleteArticle: 블로그 글 삭제에 성공한다." classname="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" time="0.228"/>
  <testcase name="findById: 블로그 글 조회에 성공한다." classname="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" time="0.091"/>
  <testcase name="findAllArticles: 블로그 글 목록 조회에 성공한다." classname="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" time="0.017"/>
  <testcase name="addArticle: 블로그 글 추가에 성공한다." classname="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" time="0.144"/>
  <testcase name="updateArticle: 블로그 글 수정에 성공한다." classname="me.duhui.springbootdeveloper.controller.BlogApiControllerTest" time="0.02"/>
  <system-out><![CDATA[2023-06-23T11:06:00.861+09:00  INFO 4476 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [me.duhui.springbootdeveloper.controller.BlogApiControllerTest]: BlogApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-06-23T11:06:00.882+09:00  INFO 4476 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration me.duhui.springbootdeveloper.SpringBootDeveloperApplication for test class me.duhui.springbootdeveloper.controller.BlogApiControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.2)

2023-06-23T11:06:00.922+09:00  INFO 4476 --- [    Test worker] m.d.s.controller.BlogApiControllerTest   : Starting BlogApiControllerTest using Java 17.0.7 with PID 4476 (started by dadad in C:\Users\dadad\OneDrive\desktop\BlogProject\BlogProject)
2023-06-23T11:06:00.923+09:00  INFO 4476 --- [    Test worker] m.d.s.controller.BlogApiControllerTest   : No active profile set, falling back to 1 default profile: "default"
2023-06-23T11:06:01.196+09:00  INFO 4476 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-23T11:06:01.219+09:00  INFO 4476 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2023-06-23T11:06:01.305+09:00  INFO 4476 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2023-06-23T11:06:01.307+09:00  INFO 4476 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:a8c8d502-1a9a-49a7-b915-0bf0691b608e user=SA
2023-06-23T11:06:01.307+09:00  INFO 4476 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2023-06-23T11:06:01.309+09:00  INFO 4476 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-06-23T11:06:01.319+09:00  WARN 4476 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-06-23T11:06:01.329+09:00  INFO 4476 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table if exists article cascade 
Hibernate: 
    
    drop table if exists refresh_token cascade 
Hibernate: 
    
    drop table if exists users cascade 
Hibernate: 
    
    create table article (
       id bigint generated by default as identity,
        author varchar(255) not null,
        content varchar(255) not null,
        created_at timestamp(6),
        title varchar(255) not null,
        updated_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    
    create table refresh_token (
       id bigint generated by default as identity,
        refresh_token varchar(255) not null,
        user_id bigint not null,
        primary key (id)
    )
Hibernate: 
    
    create table users (
       id bigint generated by default as identity,
        email varchar(255) not null,
        nickname varchar(255),
        password varchar(255),
        primary key (id)
    )
Hibernate: 
    
    alter table if exists refresh_token 
       add constraint UK_f95ixxe7pa48ryn1awmh2evt7 unique (user_id)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_2ty1xmrrgtn89xt7kyxx6ta7h unique (nickname)
2023-06-23T11:06:01.384+09:00  INFO 4476 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-06-23T11:06:01.385+09:00  INFO 4476 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-23T11:06:01.456+09:00  WARN 4476 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-23T11:06:01.510+09:00  INFO 4476 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@49de2cc4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10395bc4, org.springframework.security.web.context.SecurityContextHolderFilter@2100d881, org.springframework.security.web.header.HeaderWriterFilter@44189797, org.springframework.security.web.authentication.logout.LogoutFilter@ab5f1d5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@8497c23, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@35fd987b, me.duhui.springbootdeveloper.config.TokenAuthenticationFilter@2a1fce44, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59881424, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@59ac94ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3459ccd9, org.springframework.security.web.session.SessionManagementFilter@4aa4bfa1, org.springframework.security.web.access.ExceptionTranslationFilter@7671c02d, org.springframework.security.web.access.intercept.AuthorizationFilter@1179731c]
2023-06-23T11:06:01.554+09:00  INFO 4476 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:a8c8d502-1a9a-49a7-b915-0bf0691b608e'
2023-06-23T11:06:01.569+09:00  WARN 4476 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@3ea95f79. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-23T11:06:01.569+09:00  INFO 4476 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@3ea95f79
2023-06-23T11:06:01.569+09:00  WARN 4476 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/img/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-23T11:06:01.569+09:00  INFO 4476 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/img/**']
2023-06-23T11:06:01.569+09:00  WARN 4476 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/css/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-23T11:06:01.570+09:00  INFO 4476 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/css/**']
2023-06-23T11:06:01.570+09:00  WARN 4476 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/js/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-23T11:06:01.570+09:00  INFO 4476 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/js/**']
2023-06-23T11:06:01.611+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:01.612+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:01.613+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2023-06-23T11:06:01.620+09:00  INFO 4476 --- [    Test worker] m.d.s.controller.BlogApiControllerTest   : Started BlogApiControllerTest in 0.732 seconds (process running for 9.607)
2023-06-23T11:06:01.626+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:01.626+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:01.627+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-23T11:06:01.853+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:01.853+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:01.853+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
2023-06-23T11:06:01.944+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:01.944+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:01.945+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-23T11:06:01.963+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:01.963+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:01.964+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-23T11:06:02.108+09:00  INFO 4476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-23T11:06:02.108+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-23T11:06:02.108+09:00  INFO 4476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    update
        article 
    set
        author=?,
        content=?,
        created_at=?,
        title=?,
        updated_at=? 
    where
        id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
